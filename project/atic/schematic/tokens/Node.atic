use atic.schematic.tokens.Tokenizer;
use atic.schematic.Atic;

struct Node {
    record: TokenRecord;
    name: string;
    isLeaf: bool;
    children: List<Node>;
}

fn getNode(this: Node, name: string) -> Node {
    let i: number = 0;
    while i < this.children.size {
        let child: Node = getAt(this.children,i);
        if child.name == name {
            return child;
        }

        i = i + 1;
    }

    throw NotFoundError();
}

fn isPresent(this: Node, name: string) -> bool {
    let i: number = 0;
       while i < this.children.size {
           let child: Node = getAt(this.children,i);
           if child.name == name {
               return true;
           }
           i = i + 1;
       }

       return false;
}

fn child(this: Node) -> Node {
    return getAt(this.children,0);
}

fn assertType(node: Node, name: string) {
    if node.name != name {
        throw AssertError("Unexpected Type " + name + " for type " + node.name);
    }
}