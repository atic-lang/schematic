use atic.schematic.Path;
use atic.schematic.Expression;
use atic.schematic.Context;
use atic.schematic.type.Type;
use atic.schematic.tokens.Tokenizer;
use atic.schematic.Atic;

struct Member {
    type: MemberType
    compounds: List<Access>;
}

enum MemberType {
    External(Path);
    Local(Variable);
}

enum Access {
    Array(Type, Expression);
    Call(Type, List<Expression>);
    Member(Type, number);
}

fn MemberType(member: Member, context: Context) -> Result<Type,AticError> {
    return Result.Ok<Type,AticError>(Type.Primitive(-1));
}